# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    - name: Install uv and Python
      uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install the project
      run: |
        uv sync --all-extras --dev
    - name: Lint with flake8
      run: |
        uv add flake8
        # stop the build if there are Python syntax errors or undefined names
        uv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=.venv
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        uv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --ignore=E231,E226,E302,E301,E225 --exclude=.venv
    - name: Lint with Ruff
      run: |
        uv add ruff
        uv run ruff check --output-format=github --exclude=.venv .
      continue-on-error: true
    - name: Test with pytest
      run: |
        uv add pytest
        uv run pytest tests
    - name: Generate Coverage Report
      run: |
        uv add coverage
        uv run coverage run -m pytest tests
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
            token: ${{ secrets.CODECOV_TOKEN }}
